var express = require('express');
var router = express.Router();
var empMode= require('../modules/employee');

var userModule=require('../modules/user');
var asdMode= require('../modules/asd');

//  authantication
var jwt = require('jsonwebtoken');
var token = jwt.sign({ foo: 'bar' }, 'shhhhh');



//const employeeModel = require('../modules/employee');
/* GET home page. */
var employee=empMode.find({});
var asd=asdMode.find({});

router.get('/', function(req, res, next) {
  employee.exec(function(err,data){
    if(err) throw err;
    res.render('index',{title:'Employee Records', records:data});
  });
});

router.post('/', function(req, res, next) {

  var empdetails=new empMode({
    name:req.body.name,
    email:req.body.mail,
    etype:req.body.etype,
    hourlyrate:req.body.hrate,
    totalhour:req.body.totalhour,

  });


  empdetails.save(function(err,res1){
    if(err) throw err;

    employee.exec(function(err,data){
      if(err) throw err;
      res.render('index',{title:'Employee Records', records:data});
    });

  });
  
});

router.get('/login',function(err,res,next){
  res.render('login');
})

router.get('/signup',function(err,res,next){
  res.render('signup',{msg:''});
})

router.post('/signup', function(req, res, next) {

  var empdetails=new asdMode({
    pname:req.body.name,
    email:req.body.email,
    password:req.body.password,
    use:req.body.name

  });


  empdetails.save(function(err,res1){
    if(err) throw err;

    asd.exec(function(err,data){
      if(err) throw err;
      res.render('signup',{title:'Employee Records', msg:'data is entered'});
    });

  });
  
});



//@@@@@@@@@@@@@@@@@@@@@  authentication &&&&&&&&&&&&&&&&&&&7

router.get('/login12',function (req,res,next){

  res.send("login successfully")
})

function checkLoginUser(req,res,next){
  var userToken=localStorage.getItem('userToken');
  try {
    var decoded = jwt.verify(userToken, 'loginToken');
  } catch(err) {
    res.redirect('/');
  }
  next();
}

if (typeof localStorage === "undefined" || localStorage === null) {
  var LocalStorage = require('node-localstorage').LocalStorage;
  localStorage = new LocalStorage('./scratch');
}

function checkUsername(req,res,next){
  var uname=req.body.uname;
  var checkexitemail=userModule.findOne({username:uname});
  checkexitemail.exec((err,data)=>{
 if(err) throw err;
 if(data){
  
return res.render('signup', { title: 'Password Management System', msg:'Username Already Exit' });

 }
 next();
  });
}

module.exports = router;




